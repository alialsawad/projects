# Generated by Django 4.0.4 on 2022-06-21 15:32

import base.models
from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=500, unique=True)),
                ('user_dp', models.URLField(blank=True, null=True)),
                ('password', models.CharField(max_length=500)),
                ('token', models.CharField(blank=True, max_length=500, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.CharField(max_length=500, primary_key=True, serialize=False)),
                ('application_url', models.URLField(max_length=600)),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('company_name', models.CharField(blank=True, max_length=200, null=True)),
                ('category', models.CharField(blank=True, max_length=200, null=True)),
                ('job_type', models.CharField(blank=True, max_length=200, null=True)),
                ('job_salary', models.CharField(blank=True, max_length=200, null=True)),
                ('job_description', models.TextField()),
                ('candidate_required_location', models.CharField(blank=True, max_length=200, null=True)),
                ('publication_date', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='RemoJobs',
            fields=[
                ('id', models.CharField(max_length=900, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('company_name', models.CharField(max_length=200)),
                ('category', models.CharField(max_length=200)),
                ('skills', models.CharField(max_length=600)),
                ('job_type', models.CharField(max_length=200)),
                ('job_salary', models.CharField(blank=True, max_length=200, null=True)),
                ('job_description', models.TextField()),
                ('candidate_required_location', models.CharField(max_length=200)),
                ('publication_date', models.DateTimeField(auto_now_add=True)),
                ('applied_users', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
                ('post_owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_owner', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProfileMarkdown',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('markdown_text', models.TextField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=base.models.upload_to, validators=[base.models.image_size])),
                ('imageName', models.CharField(max_length=500)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
